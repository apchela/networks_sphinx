
====================
7 уровней модели OSI
====================

+--------------------+---------------------------+-------------------+
|**Уровень**         |**Назначение**             |**Примеры**        |
+--------------------+---------------------------+-------------------+
|   Физический       |Сигналы, провода, биты     |Кабели, оптика     |
+--------------------+---------------------------+-------------------+
|   Канальный        |MAC-адреса, фреймы         |Ethernet, PPP      |
+--------------------+---------------------------+-------------------+
|   Сетевой          |Адресация, маршрутизация   |IP, ICMP           |
+--------------------+---------------------------+-------------------+
|   Транспортный     |Доставка и контроль ошибок |TCP, UDP           |
+--------------------+---------------------------+-------------------+
|   Сеансовый        |Управление соединением     |NetBIOS, RPC       |
+--------------------+---------------------------+-------------------+
|   Представительный |Кодировка, шифрование      |TLS, JPEG, MP3     |
+--------------------+---------------------------+-------------------+
|   Прикладной       |Взаимодействие с ПО        |HTTP, FTP, SMTP    |
+--------------------+---------------------------+-------------------+

********************************
1. Физический уровень (Physical)
********************************

**Что делает**: передает «сырые» биты по физическим средам — электрические импульсы, свет в оптоволокне, радиосигнал в Wi-Fi. Определяет кабели, разъемы, скорость передачи, уровни напряжений.

**Примеры**: витая пара (Ethernet кабель), оптоволокно, Wi-Fi-антенны, концентраторы (hubs).

**Если проблемы на этом уровне**: нет физического сигнала — кабель обрыв, поврежден разъем, плохая коаксиальная линия, слабый сигнал Wi-Fi.

********************************
2. Канальный уровень (Data Link)
********************************

**Что делает**: обеспечивает передачу между соседними узлами в одной сети (между устройствами, соединенными физически). Управляет физическими адресами (MAC), формирует кадры, проверяет ошибки на уровне канала.

**Примеры/протоколы**: Ethernet (Wi-Fi тоже относится к этому уровню), ARP (сопоставление IP → MAC).

**Если проблемы на этом уровне**: проблемы с подключением внутри LAN, плохой Wi-Fi, устройство не видит соседей в сети.

****************************
3. Сетевой уровень (Network)
****************************

**Что делает**: отвечает за логическую адресацию и маршрутизацию — как пакет добирается между сетями (между машинами в разных локальных сетях или в интернете).

**Основной протокол**: IP (IPv4, IPv6). Также — ICMP (инструменты ping/traceroute).

**Если проблемы на этом уровне**: пакеты не проходят между сетями, ping не проходит, traceroute показывает обрывы.

***********************************
4. Транспортный уровень (Transport)
***********************************

**Что делает**: обеспечивает надежную или быструю передачу между конечными точками (end-to-end). Разбивает данные на части, нумерует их, собирает на приеме, управляет скоростью и проверяет целостность.

**Основные протоколы**: TCP (надежный, с подтверждениями и контролем потока), UDP (быстрый, без гарантий доставки).

**Если проблемы на этом уровне**: приложения могут подвисать, данные приходят некорректно или вовсе не доходят. Типичные инструменты диагностики: netstat, telnet, проверка открытых портов.

******************************
5. Сеансовый уровень (Session)
******************************

**Что делает**: устанавливает, поддерживает и завершает сессии — логические сеансы общения между приложениями (контроль диалога, восстановление после ошибок).

**Примеры**: протоколы удаленного вызова (RPC), управление сессиями в некоторых старых корпоративных системах.

**Почему редко заметен**: в современной сети многие функции сеансового уровня выполняют сами приложения или транспортный уровень (TCP).

*******************************************
6. Представительский уровень (Presentation)
*******************************************

**Что делает**: отвечает за представление данных — перевод форматов, шифрование/дешифрование и сжатие/распаковку.

**Примеры**: TLS/SSL (шифрование для HTTPS), кодировки (UTF-8), компрессия.

**Пояснение термина**: шифрование обеспечивает конфиденциальность, а сжатие уменьшает объем передаваемых данных.

***********************************
7. Прикладной уровень (Application)
***********************************

**Что делает**: предоставляет интерфейс для приложений, чтобы они могли отправлять и получать данные по сети.

**Примеры**: веб-браузеры (HTTP), почтовые программы (SMTP), FTP-клиенты, SSH, DNS.

**Что важно понимать**: здесь формируются сами сообщения — что отправляется (запрос страницы, письмо и т.д.).

**************************************
Как данные проходят между компьютерами
**************************************

Открывается веб-страница:

* Прикладной уровень (7): браузер формирует HTTP-запрос.
* Представительский (6): если сайт через HTTPS — содержимое шифруется (TLS).
* Сеансовый (5): устанавливается сессия (логика «разговоров» между клиентом и сервером).
* Транспортный (4): TCP разбивает данные на сегменты, пронумеровывает, добавляет порт назначения (например, 443). Начинается TCP-handshake.
* Сетевой (3): к каждому сегменту добавляется IP-заголовок с адресами отправителя и получателя — получается пакет. Маршрутизаторы по пути направляют пакет.
* Канальный (2): пакет помещается в кадр с MAC-адресами соседних устройств. Кадры передаются внутри сегмента сети.
* Физический (1): кадр преобразуется в электрические/оптические сигналы и уходит по кабелю или радиоволнам.

На приеме все операции выполняются в обратном порядке (декапсуляция): физический уровень → декодирование кадра → проверка IP → сборка TCP → расшифровка TLS → показ страницы в браузере.

****************************
Как это помогает на практике
****************************

* Диагностика сети: если ping проходит — сетевой (IP) уровень работает; если ping не проходит, но локальная сеть есть — проблема может быть на сетевом/маршрутизации.
* Понимание безопасности: файрволлы и правила часто опираются на порты (транспортный уровень) и IP-адреса (сетевой уровень).
* Проектирование сети: выбор между коммутатором и маршрутизатором, настройка VLAN — все связано с канальным и сетевым уровнями.
* Оптимизация: если сайт медленно отвечает, нужно понять, где задержка: приложение, TCP (потеря пакетов, повторная передача), маршрутизация или физика (плохой канал).